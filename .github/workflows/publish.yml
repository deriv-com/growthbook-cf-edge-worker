name: Deploy Cloudflare Worker

on:
  # Allows manual triggering from the GitHub Actions tab with environment selection
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment (staging, production, development)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
          - development

jobs:
  deploy-to-cloudflare-production:
    name: Deploy to Cloudflare Production
    if: github.event.inputs.environment == 'production'
    environment: Production
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: NPM install
        run: npm install

      - name: Create wrangler.toml file
        uses: ./.github/actions/create-wrangler-toml
        with:
          PROXY_TARGET: ${{ secrets.PROXY_TARGET }}
          GROWTHBOOK_DECRYPTION_KEY: ${{ secrets.GROWTHBOOK_DECRYPTION_KEY }}
          GROWTHBOOK_CLIENT_KEY: ${{ secrets.GROWTHBOOK_CLIENT_KEY }}
          GROWTHBOOK_API_HOST: ${{ secrets.GROWTHBOOK_API_HOST }}
          KV_BINDING: ${{ secrets.KV_BINDING }}
          KV_ID: ${{ secrets.KV_ID }}
          ROUTE: ${{ secrets.ROUTE }}
          COMPATIBILITY_DATE: '2024-09-09'
      - name: Publish to Cloudflare with Wrangler
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Publishing to Cloudflare using Wrangler..."
          wrangler deploy --env production

  deploy-to-cloudflare-staging:
    name: Deploy to Cloudflare Staging
    if: github.event.inputs.environment == 'staging'
    environment: Staging
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: NPM install
        run: npm install

      - name: Create wrangler.toml file
        uses: ./.github/actions/create-wrangler-toml
        with:
          PROXY_TARGET: ${{ secrets.PROXY_TARGET }}
          GROWTHBOOK_DECRYPTION_KEY: ${{ secrets.GROWTHBOOK_DECRYPTION_KEY }}
          GROWTHBOOK_CLIENT_KEY: ${{ secrets.GROWTHBOOK_CLIENT_KEY }}
          GROWTHBOOK_API_HOST: ${{ secrets.GROWTHBOOK_API_HOST }}
          KV_BINDING: ${{ secrets.KV_BINDING }}
          KV_ID: ${{ secrets.KV_ID }}
          ROUTE: ${{ secrets.ROUTE }}
          COMPATIBILITY_DATE: '2024-09-09'
      - name: Publish to Cloudflare with Wrangler
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Publishing to Cloudflare using Wrangler..."
          wrangler deploy --env staging

  deploy-to-cloudflare-development:
    name: Deploy to Cloudflare Development
    if: github.event.inputs.environment == 'development'
    environment: Development
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: NPM install
        run: npm install

      - name: Create wrangler.toml file
        uses: ./.github/actions/create-wrangler-toml
        with:
          PROXY_TARGET: ${{ secrets.PROXY_TARGET }}
          GROWTHBOOK_DECRYPTION_KEY: ${{ secrets.GROWTHBOOK_DECRYPTION_KEY }}
          GROWTHBOOK_CLIENT_KEY: ${{ secrets.GROWTHBOOK_CLIENT_KEY }}
          GROWTHBOOK_API_HOST: ${{ secrets.GROWTHBOOK_API_HOST }}
          KV_BINDING: ${{ secrets.KV_BINDING }}
          KV_ID: ${{ secrets.KV_ID }}
          ROUTE: ${{ secrets.ROUTE }}
          COMPATIBILITY_DATE: '2024-09-09'
      - name: Publish to Cloudflare with Wrangler
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Publishing to Cloudflare using Wrangler..."
          wrangler deploy --env development
